---
title: "Brazilian Fuel Prices Analysis"
author: "Jo√£o Paiva"
format: pdf
execute:
  echo: true
  jupyter-kernel: "Python (venv)"
---

``` {python}
from pyspark.sql import SparkSession
from pyspark.sql.functions import col, regexp_replace, avg, round, when
from pyspark.sql.types import FloatType

import seaborn as sns
import matplotlib.pyplot as plt
import geopandas as gpd
from unidecode import unidecode
```

``` {python}
spark = SparkSession.builder \
    .appName("Fuel Prices in Brazil Analysis") \
    .getOrCreate()
```

``` {python}
df_gasoline_ethanol = spark.read.format("parquet").load("Gasoline and Ethanol Prices.parquet")
df_gasoline_ethanol.show()
```

``` {python}
df_diesel_cng = spark.read.format("parquet").load("Diesel and CNG Prices.parquet")
df_diesel_cng.show()
```

``` {python}
df_lpg = spark.read.format("parquet").load("LPG Prices.parquet")
df_lpg.show()
```

``` {python}
df_fuels = df_gasoline_ethanol.union(df_diesel_cng).union(df_lpg)
df_fuels.show()
```

``` {python}
df_fuels = df_fuels.select("Regiao - Sigla", "Estado - Sigla", "Municipio", "Revenda", "Produto", "Valor de Venda", "Valor de Compra", "Unidade de Medida", "Bandeira")
df_fuels.show()
```

``` {python}
df_fuels = df_fuels.withColumnRenamed("Regiao - Sigla", "Region") \
    .withColumnRenamed("Estado - Sigla", "State") \
    .withColumnRenamed("Municipio", "City") \
    .withColumnRenamed("Revenda", "Gas Station") \
    .withColumnRenamed("Produto", "Product") \
    .withColumnRenamed("Valor de Venda", "Sales Price") \
    .withColumnRenamed("Valor de Compra", "Purchase Price") \
    .withColumnRenamed("Unidade de Medida", "Unit of Measurement") \
    .withColumnRenamed("Bandeira", "Fuel Brand")
df_fuels.show()
```

``` {python}
df_fuels = df_fuels.withColumn(
    "Product", 
    when(df_fuels["Product"] == "ETANOL", "Ethanol")
    .when(df_fuels["Product"] == "GASOLINA", "Gasoline")
    .when(df_fuels["Product"] == "GASOLINA ADITIVADA", "Premium Gasoline")
    .when(df_fuels["Product"] == "DIESEL", "Diesel")
    .when(df_fuels["Product"] == "DIESEL S10", "Diesel S10")
    .when(df_fuels["Product"] == "GLP", "LPG")
    .when(df_fuels["Product"] == "GNV", "CNG")
    .otherwise(df_fuels["Product"])
)
df_fuels.show()
```

``` {python}
df_fuels = df_fuels.withColumn(
    "Unit of Measurement",
    when(df_fuels["Unit of Measurement"] == "R$ / litro", "R$ / L")
    .otherwise(df_fuels["Unit of Measurement"])
)
df_fuels.show()
```

``` {python}
df_fuels = df_fuels.withColumn("Sales Price", regexp_replace("Sales Price", ",", "."))
df_fuels.show(10)
```

``` {python}
df_fuels = df_fuels.withColumn("Sales Price", col("Sales Price").cast(FloatType()))
df_fuels.show(10)
```

``` {python}
df_fuels.filter(col("Sales Price").isNull()).show()
```

## National Average Sales Price

``` {python}
df_fuels.groupBy("Product", "Unit of Measurement") \
    .agg(round(avg("Sales Price"), 2).alias("Average Sales Price")) \
    .orderBy('Average Sales Price', ascending=False) \
    .show()
```

## Average Sales Price by Region

#### Ethanol

``` {python}
df_fuels.filter(df_fuels["Product"] == "Ethanol") \
    .groupBy("Region") \
.agg(round(avg("Sales Price"), 2).alias("Average Ethanol Sales Price (R$/L)")) \
.orderBy("Average Ethanol Sales Price (R$/L)", ascending=False) \
.show()
```

#### Gasoline

``` {python}
df_fuels.filter(df_fuels["Product"] == "Gasoline") \
    .groupBy("Region") \
    .agg(round(avg("Sales Price"), 2).alias("Average Gasoline Sales Price (R$/L)")) \
    .orderBy("Average Gasoline Sales Price (R$/L)", ascending=False) \
    .show()
```

#### Premium Gasoline

``` {python}
df_fuels.filter(df_fuels["Product"] == "Premium Gasoline") \
    .groupBy("Region") \
    .agg(round(avg("Sales Price"), 2).alias("Average Premium Gasoline Sales Price (R$/L)")) \
    .orderBy("Average Premium Gasoline Sales Price (R$/L)", ascending=False) \
    .show()
```

#### Diesel

``` {python}
df_fuels.filter(df_fuels["Product"] == "Diesel") \
    .groupBy("Region") \
    .agg(round(avg("Sales Price"), 2).alias("Average Diesel Sales Price (R$/L)")) \
    .orderBy("Average Diesel Sales Price (R$/L)", ascending=False) \
    .show()
```

#### Diesel S10

``` {python}
df_fuels.filter(df_fuels["Product"] == "Diesel S10") \
    .groupBy("Region") \
    .agg(round(avg("Sales Price"), 2).alias("Average Diesel S10 Sales Price (R$/L)")) \
    .orderBy("Average Diesel S10 Sales Price (R$/L)", ascending=False) \
    .show()
```

#### CNG

``` {python}
df_fuels.filter(df_fuels["Product"] == "CNG") \
    .groupBy("Region") \
    .agg(round(avg("Sales Price"), 2).alias("Average CNG Sales Price (R$/m3)")) \
    .orderBy("Average CNG Sales Price (R$/m3)", ascending=False) \
    .show()
```

#### LPG

``` {python}
df_fuels.filter(df_fuels["Product"] == "LPG") \
    .groupBy("Region") \
    .agg(round(avg("Sales Price"), 2).alias("Average LPG Sales Price (R$/13kg)")) \
    .orderBy("Average LPG Sales Price (R$/13kg)", ascending=False) \
    .show()
```

## Average Sales Price by State

#### Ethanol

``` {python}
df_fuels.filter(df_fuels["Product"] == "Ethanol") \
    .groupBy("State") \
    .agg(round(avg("Sales Price"), 2).alias("Average Ethanol Sales Price (R$/L)")) \
    .orderBy("Average Ethanol Sales Price (R$/L)", ascending=False) \
    .show()
```

#### Gasoline

``` {python}
df_fuels.filter(df_fuels["Product"] == "Gasoline") \
    .groupBy("State") \
    .agg(round(avg("Sales Price"), 2).alias("Average Gasoline Sales Price (R$/L)")) \
    .orderBy("Average Gasoline Sales Price (R$/L)", ascending=False) \
    .show()
```

#### Premium Gasoline

``` {python}
df_fuels.filter(df_fuels["Product"] == "Premium Gasoline") \
    .groupBy("State") \
    .agg(round(avg("Sales Price"), 2).alias("Average Premium Gasoline Sales Price (R$/L)")) \
    .orderBy("Average Premium Gasoline Sales Price (R$/L)", ascending=False) \
    .show()
```

#### Diesel

``` {python}
df_fuels.filter(df_fuels["Product"] == "Diesel") \
    .groupBy("State") \
    .agg(round(avg("Sales Price"), 2).alias("Average Diesel Sales Price (R$/L)")) \
    .orderBy("Average Diesel Sales Price (R$/L)", ascending=False) \
    .show()
```

#### Diesel S10

``` {python}
df_fuels.filter(df_fuels["Product"] == "Disel S10") \
    .groupBy("State") \
    .agg(round(avg("Sales Price"), 2).alias("Average Diesel S10 Sales Price (R$/L)")) \
    .orderBy("Average Diesel S10 Sales Price (R$/L)", ascending=False) \
    .show()
```

#### CNG

``` {python}
df_fuels.filter(df_fuels["Product"] == "CNG") \
    .groupBy("State") \
    .agg(round(avg("Sales Price"), 2).alias("Average CNG Sales Price (R$/m3)")) \
    .orderBy("Average CNG Sales Price (R$/m3)", ascending=False) \
    .show()
```

#### LPG

``` {python}
df_fuels.filter(df_fuels["Product"] == "LPG") \
    .groupBy("State") \
    .agg(round(avg("Sales Price"), 2).alias("Average LPG Sales Price (R$/13kg)")) \
    .orderBy("Average LPG Sales Price (R$/13kg)", ascending=False) \
    .show()
```

## Average Sales Price by City

#### Ethanol

``` {python}
df_fuels.filter(df_fuels["Product"] == "Ethanol") \
    .groupBy("City") \
    .agg(round(avg("Sales Price"), 2).alias("Average Ethanol Sales Price (R$/L)")) \
    .orderBy("Average Ethanol Sales Price (R$/L)", ascending=False) \
    .show()
```

``` {python}
df_ethanol_city = df_fuels.filter((df_fuels["Product"] == "Gasoline") & (df_fuels["State"] == "PR")) \
    .groupBy("City") \
    .agg(round(avg("Sales Price"), 2).alias("Average Ethanol Sales Price (R$/L)")) \
    .orderBy("Average Ethanol Sales Price (R$/L)", ascending=False) \

df_ethanol_city.show(1000)

df_ethanol_city = df_ethanol_city.toPandas()
```


``` {python}
parana_shp = gpd.read_file("C:\\Users\\joaov\\Documents\\Gasoline Prices In Brazil\\PR_Municipios_2023\\PR_Municipios_2023.shp")

parana_shp = parana_shp[["NM_MUN", "geometry"]]

parana_shp["NM_MUN"] = parana_shp["NM_MUN"].str.upper().apply(unidecode)

print(parana_shp.head())
```

``` {python}
df_ethanol_city = df_ethanol_city.merge(parana_shp, left_on="City", right_on="NM_MUN", how="right")

df_ethanol_city
```

``` {python}
df_parana_shp = spark.createDataFrame(parana_shp, schem)
df_parana_shp.show()
```

#### Gasoline

``` {python}
df_fuels.filter(df_fuels["Product"] == "Gasoline") \
    .groupBy("City") \
    .agg(round(avg("Sales Price"), 2).alias("Average Gasoline Sales Price (R$/L)")) \
    .orderBy("Average Gasoline Sales Price (R$/L)", ascending=False) \
    .show()
```

#### Premium Gasoline

``` {python}
df_fuels.filter(df_fuels["Product"] == "Premium Gasoline") \
    .groupBy("City") \
    .agg(round(avg("Sales Price"), 2).alias("Average Premium Gasoline Sales Price (R$/L)")) \
    .orderBy("Average Premium Gasoline Sales Price (R$/L)", ascending=False) \
    .show()
```

#### Diesel

``` {python}
df_fuels.filter(df_fuels["Product"] == "Diesel") \
    .groupBy("City") \
    .agg(round(avg("Sales Price"), 2).alias("Average Diesel Sales Price (R$/L)")) \
    .orderBy("Average Diesel Sales Price (R$/L)", ascending=False) \
    .show()
```

#### Diesel S10

``` {python}
df_fuels.filter(df_fuels["Product"] == "Diesel S10") \
    .groupBy("City") \
    .agg(round(avg("Sales Price"), 2).alias("Average Diesel S10 Sales Price (R$/L)")) \
    .orderBy("Average Diesel S10 Sales Price (R$/L)", ascending=False) \
    .show()
```

#### CNG

``` {python}
df_fuels.filter(df_fuels["Product"] == "CNG") \
    .groupBy("City") \
    .agg(round(avg("Sales Price"), 2).alias("Average CNG Sales Price (R$/m3)")) \
    .orderBy("Average CNG Sales Price (R$/m3)", ascending=False) \
    .show()
```

#### LPG

``` {python}
df_fuels.filter(df_fuels["Product"] == "LPG") \
    .groupBy("City") \
    .agg(round(avg("Sales Price"), 2).alias("Average LPG Sales Price (R$/13kg)")) \
    .orderBy("Average LPG Sales Price (R$/13kg)", ascending=False) \
    .show()
```

## Average Sales Price by Brand

#### Ethanol

``` {python}
df_fuels.filter(col("Product") == "Ethanol") \
    .groupBy("Fuel Brand") \
    .agg(round(avg("Sales Price"), 2).alias("Average Ethanol Sales Price (R$/L)")) \
    .orderBy("Average Ethanol Sales Price (R$/L)", ascending=True) \
    .show(10)
```

``` {python}
df_fuels.filter(col("Product") == "Ethanol") \
    .groupBy("Fuel Brand") \
    .agg(round(avg("Sales Price"), 2).alias("Average Ethanol Sales Price (R$/L)")) \
    .orderBy("Average Ethanol Sales Price (R$/L)", ascending=False) \
    .show(10)
```

#### Gasoline

``` {python}
df_fuels.filter(col("Product") == "Gasoline") \
    .groupBy("Fuel Brand") \
    .agg(round(avg("Sales Price"), 2).alias("Average Gasoline Sales Price (R$/L)")) \
    .orderBy("Average Gasoline Sales Price (R$/L)", ascending=True) \
    .show(10)
```

``` {python}
df_fuels.filter(col("Product") == "Gasoline") \
    .groupBy("Fuel Brand") \
    .agg(round(avg("Sales Price"), 2).alias("Average Gasoline Sales Price (R$/L)")) \
    .orderBy("Average Gasoline Sales Price (R$/L)", ascending=False) \
    .show(10)
```

#### Premium Gasoline

``` {python}
df_fuels.filter(col("Product") == "Premium Gasoline") \
    .groupBy("Fuel Brand") \
    .agg(round(avg("Sales Price"), 2).alias("Average Premium Gasoline Sales Price (R$/L)")) \
    .orderBy("Average Premium Gasoline Sales Price (R$/L)", ascending=True) \
    .show(10)
```

``` {python}
df_fuels.filter(col("Product") == "Premium Gasoline") \
    .groupBy("Fuel Brand") \
    .agg(round(avg("Sales Price"), 2).alias("Average Premium Gasoline Sales Price (R$/L)")) \
    .orderBy("Average Premium Gasoline Sales Price (R$/L)", ascending=False) \
    .show(10)
```

#### Diesel

``` {python}
df_fuels.filter(col("Product") == "Diesel") \
    .groupBy("Fuel Brand") \
    .agg(round(avg("Sales Price"), 2).alias("Average Diesel Sales Price (R$/L)")) \
    .orderBy("Average Diesel Sales Price (R$/L)", ascending=True) \
    .show(10)
```

``` {python}
df_fuels.filter(col("Product") == "Diesel") \
    .groupBy("Fuel Brand") \
    .agg(round(avg("Sales Price"), 2).alias("Average Diesel Sales Price (R$/L)")) \
    .orderBy("Average Diesel Sales Price (R$/L)", ascending=False) \
    .show(10)
```

#### Diesel S10

``` {python}
df_fuels.filter(col("Product") == "Diesel S10") \
    .groupBy("Fuel Brand") \
    .agg(round(avg("Sales Price"), 2).alias("Average Diesel S10 Sales Price (R$/L)")) \
    .orderBy("Average Diesel S10 Sales Price (R$/L)", ascending=True) \
    .show(10)
```

``` {python}
df_fuels.filter(col("Product") == "Diesel S10") \
    .groupBy("Fuel Brand") \
    .agg(round(avg("Sales Price"), 2).alias("Average Diesel S10 Sales Price (R$/L)")) \
    .orderBy("Average Diesel S10 Sales Price (R$/L)", ascending=False) \
    .show(10)
```

#### CNG

``` {python}
df_fuels.filter(col("Product") == "CNG") \
    .groupBy("Fuel Brand") \
    .agg(round(avg("Sales Price"), 2).alias("Average CNG Sales Price (R$/m3)")) \
    .orderBy("Average CNG Sales Price (R$/m3)", ascending=True) \
    .show(10)
```

``` {python}
df_fuels.filter(col("Product") == "CNG") \
    .groupBy("Fuel Brand") \
    .agg(round(avg("Sales Price"), 2).alias("Average CNG Sales Price (R$/m3)")) \
    .orderBy("Average CNG Sales Price (R$/m3)", ascending=False) \
    .show(10)
```

#### LPG

``` {python}
df_fuels.filter(col("Product") == "LPG") \
    .groupBy("Fuel Brand") \
    .agg(round(avg("Sales Price"), 2).alias("Average LPG Sales Price (R$/13kg)")) \
    .orderBy("Average LPG Sales Price (R$/13kg)", ascending=True) \
    .show(10)
```

``` {python}
df_fuels.filter(col("Product") == "LPG") \
    .groupBy("Fuel Brand") \
    .agg(round(avg("Sales Price"), 2).alias("Average LPG Sales Price (R$/13kg)")) \
    .orderBy("Average LPG Sales Price (R$/13kg)", ascending=False) \
    .show(10)
```

## Average Sales Price by Gas Station

#### Ethanol

``` {python}
df_fuels.filter(col("Product") == "Ethanol") \
    .groupBy("Gas Station", "City", "State", "Region") \
    .agg(round(avg("Sales Price"), 2).alias("Average Ethanol Sales Price (R$/L)")) \
    .orderBy("Average Ethanol Sales Price (R$/L)", ascending=True) \
    .show(10)
```

``` {python}
df_fuels.filter(col("Product") == "Ethanol") \
    .groupBy("Gas Station", "City", "State", "Region") \
    .agg(round(avg("Sales Price"), 2).alias("Average Ethanol Sales Price (R$/L)")) \
    .orderBy("Average Ethanol Sales Price (R$/L)", ascending=False) \
    .show(10)
```

#### Gasoline

``` {python}
df_fuels.filter(col("Product") == "Gasoline") \
    .groupBy("Gas Station", "City", "State", "Region") \
    .agg(round(avg("Sales Price"), 2).alias("Average Gasoline Sales Price (R$/L)")) \
    .orderBy("Average Gasoline Sales Price (R$/L)", ascending=True) \
    .show(10)
```

``` {python}
df_fuels.filter(col("Product") == "Gasoline") \
    .groupBy("Gas Station", "City", "State", "Region") \
    .agg(round(avg("Sales Price"), 2).alias("Average Gasoline Sales Price (R$/L)")) \
    .orderBy("Average Gasoline Sales Price (R$/L)", ascending=False) \
    .show(10)
```

#### Premium Gasoline

``` {python}
df_fuels.filter(col("Product") == "Premium Gasoline") \
    .groupBy("Gas Station", "City", "State", "Region") \
    .agg(round(avg("Sales Price"), 2).alias("Average Premium Gasoline Sales Price (R$/L)")) \
    .orderBy("Average Premium Gasoline Sales Price (R$/L)", ascending=True) \
    .show(10)
```

``` {python}
df_fuels.filter(col("Product") == "Premium Gasoline") \
    .groupBy("Gas Station", "City", "State", "Region") \
    .agg(round(avg("Sales Price"), 2).alias("Average Premium Gasoline Sales Price (R$/L)")) \
    .orderBy("Average Premium Gasoline Sales Price (R$/L)", ascending=False) \
    .show(10)
```

#### Diesel

``` {python}
df_fuels.filter(col("Product") == "Diesel") \
    .groupBy("Gas Station", "City", "State", "Region") \
    .agg(round(avg("Sales Price"), 2).alias("Average Diesel Sales Price (R$/L)")) \
    .orderBy("Average Diesel Sales Price (R$/L)", ascending=True) \
    .show(10)
```

``` {python}
df_fuels.filter(col("Product") == "Diesel") \
    .groupBy("Gas Station", "City", "State", "Region") \
    .agg(round(avg("Sales Price"), 2).alias("Average Diesel Sales Price (R$/L)")) \
    .orderBy("Average Diesel Sales Price (R$/L)", ascending=False) \
    .show(10)
```

#### Diesel S10

``` {python}
df_fuels.filter(col("Product") == "Diesel S10") \
    .groupBy("Gas Station", "City", "State", "Region") \
    .agg(round(avg("Sales Price"), 2).alias("Average Diesel S10 Sales Price (R$/L)")) \
    .orderBy("Average Diesel S10 Sales Price (R$/L)", ascending=True) \
    .show(10)
```

``` {python}
df_fuels.filter(col("Product") == "Diesel S10") \
    .groupBy("Gas Station", "City", "State", "Region") \
    .agg(round(avg("Sales Price"), 2).alias("Average Diesel S10 Sales Price (R$/L)")) \
    .orderBy("Average Diesel S10 Sales Price (R$/L)", ascending=False) \
    .show(10)
```

#### CNG

``` {python}
df_fuels.filter(col("Product") == "CNG") \
    .groupBy("Gas Station", "City", "State", "Region") \
    .agg(round(avg("Sales Price"), 2).alias("Average CNG Sales Price (R$/m3)")) \
    .orderBy("Average CNG Sales Price (R$/m3)", ascending=True) \
    .show(10)
```

``` {python}
df_fuels.filter(col("Product") == "CNG") \
    .groupBy("Gas Station", "City", "State", "Region") \
    .agg(round(avg("Sales Price"), 2).alias("Average CNG Sales Price (R$/m3)")) \
    .orderBy("Average CNG Sales Price (R$/m3)", ascending=False) \
    .show(10)
```

#### LPG

``` {python}
df_fuels.filter(col("Product") == "LPG") \
    .groupBy("Gas Station", "City", "State", "Region") \
    .agg(round(avg("Sales Price"), 2).alias("Average LPG Sales Price (R$/13kg)")) \
    .orderBy("Average LPG Sales Price (R$/13kg)", ascending=True) \
    .show(10)
```

``` {python}
df_fuels.filter(col("Product") == "LPG") \
    .groupBy("Gas Station", "City", "State", "Region") \
    .agg(round(avg("Sales Price"), 2).alias("Average LPG Sales Price (R$/13kg)")) \
    .orderBy("Average LPG Sales Price (R$/13kg)", ascending=False) \
    .show(10)
```